### Starting build.
# Target: toplevel.ml.depends, tags: { package(llvm), package(llvm.analysis), extension:ml, file:toplevel.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules toplevel.ml > toplevel.ml.depends # cached
# Target: ast.ml.depends, tags: { package(llvm), package(llvm.analysis), extension:ml, file:ast.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { package(llvm), package(llvm.analysis), byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o ast.cmo ast.ml # cached
# Target: codegen.ml.depends, tags: { package(llvm), package(llvm.analysis), extension:ml, file:codegen.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules codegen.ml > codegen.ml.depends
# Target: sast.ml.depends, tags: { package(llvm), package(llvm.analysis), extension:ml, file:sast.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules sast.ml > sast.ml.depends # cached
# Target: sast.cmo, tags: { package(llvm), package(llvm.analysis), byte, compile, extension:cmo, extension:ml, file:sast.cmo, file:sast.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o sast.cmo sast.ml # cached
# Target: parser.mly, tags: { package(llvm), package(llvm.analysis), extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, parser, quiet }
ocamlyacc parser.mly # cached
# Target: parser.mli.depends, tags: { package(llvm), package(llvm.analysis), extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { package(llvm), package(llvm.analysis), byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o parser.cmi parser.mli # cached
# Target: scanner.mll, tags: { package(llvm), package(llvm.analysis), extension:mll, file:scanner.mll, lexer, ocaml, ocamllex, quiet }
ocamllex.opt -q scanner.mll # cached
# Target: scanner.ml.depends, tags: { package(llvm), package(llvm.analysis), extension:ml, file:scanner.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules scanner.ml > scanner.ml.depends # cached
# Target: scanner.cmo, tags: { package(llvm), package(llvm.analysis), byte, compile, extension:cmo, extension:ml, file:scanner.cmo, file:scanner.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o scanner.cmo scanner.ml # cached
# Target: semant.ml.depends, tags: { package(llvm), package(llvm.analysis), extension:ml, file:semant.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules semant.ml > semant.ml.depends # cached
# Target: semant.cmo, tags: { package(llvm), package(llvm.analysis), byte, compile, extension:cmo, extension:ml, file:semant.cmo, file:semant.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o semant.cmo semant.ml # cached
# Target: codegen.cmo, tags: { package(llvm), package(llvm.analysis), byte, compile, extension:cmo, extension:ml, file:codegen.cmo, file:codegen.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmo codegen.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmo codegen.ml
File "codegen.ml", line 140, characters 33-36:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 140, characters 33-36:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 141, characters 33-36:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 141, characters 33-36:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 212, characters 43-46:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 212, characters 43-46:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 213, characters 45-48:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 213, characters 45-48:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 214, characters 43-46:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 214, characters 43-46:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 215, characters 45-48:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 215, characters 45-48:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 216, characters 44-47:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 216, characters 44-47:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 221, characters 63-66:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 221, characters 63-66:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 256, characters 45-48:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 256, characters 45-48:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 257, characters 47-50:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 257, characters 47-50:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 258, characters 45-48:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 258, characters 45-48:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 259, characters 47-50:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 259, characters 47-50:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 260, characters 46-49:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 260, characters 46-49:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 34, characters 6-11:
Warning 26: unused variable i8p_t.
File "codegen.ml", line 36, characters 6-13:
Warning 26: unused variable i32pp_t.
File "codegen.ml", line 71, characters 6-17:
Warning 26: unused variable printc_func.
File "codegen.ml", line 75, characters 6-15:
Warning 26: unused variable play_func.
File "codegen.ml", line 231, characters 8-22:
Warning 26: unused variable closed_bracket.
File "codegen.ml", line 271, characters 8-17:
Warning 26: unused variable nextagain.
File "codegen.ml", line 276, characters 8-22:
Warning 26: unused variable closed_bracket.
# Target: toplevel.cmo, tags: { package(llvm), package(llvm.analysis), byte, compile, extension:cmo, extension:ml, file:toplevel.cmo, file:toplevel.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o toplevel.cmo toplevel.ml
# Target: ast.cmx, tags: { package(llvm), package(llvm.analysis), compile, extension:cmx, extension:ml, file:ast.cmx, file:ast.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o ast.cmx ast.ml # cached
# Target: sast.cmx, tags: { package(llvm), package(llvm.analysis), compile, extension:cmx, extension:ml, file:sast.cmx, file:sast.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o sast.cmx sast.ml # cached
# Target: parser.ml.depends, tags: { package(llvm), package(llvm.analysis), extension:ml, file:parser.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmx, tags: { package(llvm), package(llvm.analysis), compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o parser.cmx parser.ml # cached
# Target: scanner.cmx, tags: { package(llvm), package(llvm.analysis), compile, extension:cmx, extension:ml, file:scanner.cmx, file:scanner.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o scanner.cmx scanner.ml # cached
# Target: semant.cmx, tags: { package(llvm), package(llvm.analysis), compile, extension:cmx, extension:ml, file:semant.cmx, file:semant.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o semant.cmx semant.ml # cached
# Target: codegen.cmx, tags: { package(llvm), package(llvm.analysis), compile, extension:cmx, extension:ml, file:codegen.cmx, file:codegen.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmx codegen.ml
+ ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmx codegen.ml
File "codegen.ml", line 140, characters 33-36:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 140, characters 33-36:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 141, characters 33-36:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 141, characters 33-36:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 212, characters 43-46:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 212, characters 43-46:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 213, characters 45-48:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 213, characters 45-48:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 214, characters 43-46:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 214, characters 43-46:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 215, characters 45-48:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 215, characters 45-48:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 216, characters 44-47:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 216, characters 44-47:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 221, characters 63-66:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 221, characters 63-66:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 256, characters 45-48:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 256, characters 45-48:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 257, characters 47-50:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 257, characters 47-50:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 258, characters 45-48:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 258, characters 45-48:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 259, characters 47-50:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 259, characters 47-50:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 260, characters 46-49:
Warning 40: Int was selected from type Ast.typ.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "codegen.ml", line 260, characters 46-49:
Warning 42: this use of Int relies on type-directed disambiguation,
it will not compile with OCaml 4.00 or earlier.
File "codegen.ml", line 34, characters 6-11:
Warning 26: unused variable i8p_t.
File "codegen.ml", line 36, characters 6-13:
Warning 26: unused variable i32pp_t.
File "codegen.ml", line 71, characters 6-17:
Warning 26: unused variable printc_func.
File "codegen.ml", line 75, characters 6-15:
Warning 26: unused variable play_func.
File "codegen.ml", line 231, characters 8-22:
Warning 26: unused variable closed_bracket.
File "codegen.ml", line 271, characters 8-17:
Warning 26: unused variable nextagain.
File "codegen.ml", line 276, characters 8-22:
Warning 26: unused variable closed_bracket.
# Target: toplevel.cmx, tags: { package(llvm), package(llvm.analysis), compile, extension:cmx, extension:ml, file:toplevel.cmx, file:toplevel.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -w +a-4 -package llvm.analysis -package llvm -o toplevel.cmx toplevel.ml
# Target: toplevel.native, tags: { package(llvm), package(llvm.analysis), dont_link_with, extension:native, file:toplevel.native, link, native, ocaml, program, quiet }
ocamlfind ocamlopt -linkpkg -package llvm.analysis -package llvm ast.cmx sast.cmx codegen.cmx parser.cmx scanner.cmx semant.cmx toplevel.cmx -o toplevel.native
# Compilation successful.
